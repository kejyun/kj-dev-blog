<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nvm on KJ Dev</title>
    <link>https://dev.kejyun.com/tags/nvm/</link>
    <description>Recent content in nvm on KJ Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 01 Nov 2021 09:51:29 +0800</lastBuildDate><atom:link href="https://dev.kejyun.com/tags/nvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 MacOS 使用 nvm 安裝 Node 環境</title>
      <link>https://dev.kejyun.com/article/2021/11/nvm-install-node-on-mac-os/</link>
      <pubDate>Mon, 01 Nov 2021 09:51:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/11/nvm-install-node-on-mac-os/</guid>
      <description>在 Mac 開發 Node.js 程式時可以使用 NVM 來管理 Node.js 的版本，可以針對不同的專案需求去做簡單的 Node.js 版本切換
安裝 NVM 執行 curl 指令進行安裝
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash 設定 NVM 環境變數 Terminal 的設定檔案通常會放在 ~/.bash_profile、~/.zshrc、~/.profile、~/.bashrc 檔案中，在開啟 Terminal 時會自動載入客製化設定，需要設定開啟時去載入 NVM 的相關設定
預設在安裝完成後會自動將 NVM 設定檔案自動加入您的設定檔案，若沒有自動加入時則自行手動加入即可
export NVM_DIR=&amp;#34;$([ -z &amp;#34;${XDG_CONFIG_HOME-}&amp;#34; ] &amp;amp;&amp;amp; printf %s &amp;#34;${HOME}/.nvm&amp;#34; || printf %s &amp;#34;${XDG_CONFIG_HOME}/nvm&amp;#34;)&amp;#34; [ -s &amp;#34;$NVM_DIR/nvm.sh&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/nvm.sh&amp;#34; # This loads nvm 安裝時自動加入 NVM 設定檔範例
$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash 14:44:48 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 14984 100 14984 0 0 75848 0 --:--:-- --:--:-- --:--:-- 81879 =&amp;gt; Downloading nvm from git to &amp;#39;/Users/kj/.</description>
    </item>
    
    <item>
      <title>NVM install node.js on Windows 10</title>
      <link>https://dev.kejyun.com/en/article/2021/08/nvm-install-node-on-windows-10/</link>
      <pubDate>Thu, 26 Aug 2021 09:51:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/en/article/2021/08/nvm-install-node-on-windows-10/</guid>
      <description>It&amp;rsquo;s very convenient to develop node.js applications on Mac by using NVM to manage our node.js version. But if your want to develop node.js application on Windows, you still can use NVM to manage your node.js version. Then we can switch node.js version anytime on any project.
Environment
 Windows 10 x64 node.js 14.17.5
 Install Windows version of NVM, nvm-windows Goto Github coreybutler/nvm-windows Repository to download nvm-setup.zip file, and install it step by step.</description>
    </item>
    
    <item>
      <title>在 Windows 使用 nvm 安裝 Node 環境</title>
      <link>https://dev.kejyun.com/article/2021/08/nvm-install-node-on-windows-10/</link>
      <pubDate>Sun, 22 Aug 2021 09:51:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/nvm-install-node-on-windows-10/</guid>
      <description>在 Mac 開發 Node.js 軟體通常支援性是比較好的，但如果想在 Windows 開發 Node.js 的話，也可以用 NVM 來管理 Node.js 的版本，可以針對不同的專案需求去做簡單的 Node.js 版本切換
環境
 Windows 10 x64 node.js 14.17.5
 安裝 Windows 版本的 nvm-windows 到 GitHub coreybutler/nvm-windows 的 Repo 下載 nvm-setup.zip 檔案並進行安裝，檔案解壓所後照正常的安裝步驟安裝即可
我這邊使用的是 Windows PowerShell，如果安裝完成後必須要完整的重開 Windows PowerShell，這樣才能夠讓 Windows PowerShell 讀取到對的 NVM 環境變數
如果是要讓 VS Code 的 Terminal 能夠吃到 NVM 的環境變數，則需要整台電腦重開機才吃的到設定，只重開 VS Code 是沒有用的
NVM on Windows 10
列出可以安裝的 Node.js 版本  nvm list available
 這邊指令跟 Mac 有點不一樣，不是使用 nvm ls-remote 去列出遠端可以安裝的 Node.</description>
    </item>
    
  </channel>
</rss>
