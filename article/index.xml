<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on KJ Dev</title>
    <link>https://dev.kejyun.com/article/</link>
    <description>Recent content in Articles on KJ Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 20 Aug 2021 09:51:29 +0800</lastBuildDate><atom:link href="https://dev.kejyun.com/article/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker crontab 定期排程執行程式</title>
      <link>https://dev.kejyun.com/article/2021/08/docker-crontab/</link>
      <pubDate>Fri, 20 Aug 2021 09:51:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/docker-crontab/</guid>
      <description>在 docker 我們會建立自己專案的環境，讓他可以運行我們的專案、看是 php、python、golang &amp;hellip; 之類的運行環境，而專案會需要定期排程去執行指定的程式，以下以 php 為例
建立自訂 crontab 檔案 在專案下會建立一個 crontab 指令的檔案 my_docker_crontab
# my_docker_crontab # m h dom mon dow command * * * * * /app/job.php 環境安裝 cron 映像檔通常是最小單位的檔案，所以不會有 cron 的排程程式，所以在建立 Docker 環境時必須要自己指定去安裝 cron 軟體，這樣就可以在我們自己自定義的環境去跑 cron 定期排程去執行程式
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y cron加入自訂的 crontab 檔案 在 docker 專案下將 crontab 指令的檔案 my_docker_crontab 複製到 docker 的目錄下，並指定 crontab 去執行此 crontab 檔案
# 加入 docker 專案的自訂 crontabADD my_docker_crontab /etc/cron.</description>
    </item>
    
    <item>
      <title>docker compose build 映像檔名稱</title>
      <link>https://dev.kejyun.com/article/2021/08/docker-compose-build-images-name/</link>
      <pubDate>Fri, 20 Aug 2021 09:50:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/docker-compose-build-images-name/</guid>
      <description>在使用 docker-compose 建立 Docker 時，會去使用 Dockerfile 去建立自己想要的環境，但建立完成後 docker 會自行命名這個 Dockerfile 的 images
version:&amp;#39;3&amp;#39;services:cronjob:container_name:dev_cronjobbuild:cron.Dockerfilevolumes:- /web/:/var/webrestart:always$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE dev_cronjob latest 91e20032b3ff 23 minutes ago 502MB 若想要有自己指定的 images 名稱讓我們方便管理的話，可以在 docker-compose.yml 檔案中加入 images 去指定建立完成後的映像檔名稱
 images: &amp;lt;images-name&amp;gt;:&amp;lt;images-version&amp;gt;
 version:&amp;#39;3&amp;#39;services:cronjob:container_name:dev_cronjobbuild:cron.Dockerfileimages:my_cron_image:v1.0volumes:- /web/:/var/webrestart:always這樣使用 docker-compose build 後，就可以在 docker images 看到這個映像檔有他自己的命名了
$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE my_cron_image v1.0 91e20032b3ff 23 minutes ago 502MB 參考資料  Compose file version 3 reference | Docker Documentation  </description>
    </item>
    
    <item>
      <title>打造漂亮好用的 Terminal by powerlevel10k</title>
      <link>https://dev.kejyun.com/article/2021/08/powerful-terminal-command-line-powerlevel10k/</link>
      <pubDate>Mon, 16 Aug 2021 09:50:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/powerful-terminal-command-line-powerlevel10k/</guid>
      <description>安裝 Oh My Zsh $ sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; 安裝 Nerd 字型 可以使用 powerlevel10k 推薦的 MesloLGS NF 字型
 MesloLGS NF Regular.ttf MesloLGS NF Bold.ttf MesloLGS NF Italic.ttf MesloLGS NF Bold Italic.ttf  在 Mac 環境將字體下載後，點開檔案按右下方的 Install Font 即可安裝字型
 powerful-terminal-command-line-powerlevel10k 
設定 iTerm2 字形 在 iTerm2 的 preference 中，點選 Profile &amp;gt; Text 頁籤，修改下方的 Font 設定為剛剛安裝的 MesloLGS NF 字型
 powerful-terminal-command-line-powerlevel10k 
下載 powerlevel10k 到 Oh My Zsh 主題中 git clone --depth=1 https://github.</description>
    </item>
    
    <item>
      <title>Welcome to emergency mode on Ubuntu 16.04，無法正確 mount 硬碟</title>
      <link>https://dev.kejyun.com/article/2021/08/welcome-to-emergency-mode-on-ubuntu-1604/</link>
      <pubDate>Mon, 16 Aug 2021 08:50:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/welcome-to-emergency-mode-on-ubuntu-1604/</guid>
      <description>Ubuntu 16.04 一開機時，突然出現了下面的訊息，再次重新開機也沒用一樣卡住無限鬼打牆
 Welcome to emergency mode! After logging in, type “journalctl -xb” to view system logs, “systemctl reboot” to reboot, “systemctl default” or ^D to try again boot into default mode. Give root password for maintained (or press Control-D to continue).
 輸入 root 密碼登入打入 journalctl -xb 檢查開機訊息時，發現在 mount 硬碟時整個卡住，導致系統無法順利啟動
這個錯誤訊息常發生在載入 外部硬碟、網路硬碟 等沒有載入導致
解決方式 在 emergency mode 登入 root 帳號後輸入下列指令讓 /etc/fstab 檔案有被寫入的權限
$ mount -n -o remount,rw / /etc/fstab 是自動 mount 的設定檔案，使用 vi 或 vim 編輯此檔案</description>
    </item>
    
    <item>
      <title>MySQL Replica master&#39;s binary log is corrupted</title>
      <link>https://dev.kejyun.com/article/2021/08/mysql-replica-master-binary-log-is-corrupted/</link>
      <pubDate>Thu, 05 Aug 2021 08:50:29 +0800</pubDate>
      
      <guid>https://dev.kejyun.com/article/2021/08/mysql-replica-master-binary-log-is-corrupted/</guid>
      <description>狀況 使用管理者帳號登入 MySQL
mysql -h localhost -u root -p 在 MySQL Master 機器中輸入 show slave status\G 檢查 Slave 機器狀態
mysql&amp;gt; show slave status\G *************************** 1. row *************************** Slave_IO_State: Master_Host: 192.168.1.2 Master_User: rep Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.155171 Read_Master_Log_Pos: 71744684 Relay_Log_File: master-relay-bin.089272 Relay_Log_Pos: 63995870 Relay_Master_Log_File: mysql-bin.155169 Slave_IO_Running: No Slave_SQL_Running: No Replicate_Do_DB: Replicate_Ignore_DB: mysql Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: mysql.% Last_Errno: 1594 Last_Error: Relay log read failure: Could not parse relay log event entry.</description>
    </item>
    
  </channel>
</rss>
