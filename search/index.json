[{"content":" 剪映版本: 2.6\n 前期準備 目前 (2022/02) 使用剪映 AI 識別字幕需要影片檔才能夠識別，若單純只有聲音檔的話識別會失敗，所以可以將你要識別的影片，去除掉背景音樂僅留對話聲音，減少辨識錯誤機率，並使用最低解析度輸出，盡量讓檔案越小越好\n這邊在 Adobe Premiere Pro 使用 HEVC (H.265) / SD 480p 格式輸出\n\r匯出僅含對話最小解析度的影片聲音檔\r\n使用剪映 AI 辨識字幕 打開剪映後，將素材拖曳至時間軸\n 目前測試 60 分鐘左右的影片是可以正常輸出的，辨識時間大概 10 分鐘左右，但每次要辨識新的影片需要將剪映關閉再重新打開，才能夠再繼續辨識\n \r使用剪映 2.6 AI 辨識繁體中文字幕\r\n點選左上方的工具箱 文本 / 智能字幕 / 開始識別\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n你會在畫面上看到影片正在識別中\n 確保你的電腦是有連線到網路的，因為剪映 AI 識別是需要連線到網路才能夠進行識別\n \r使用剪映 2.6 AI 辨識繁體中文字幕\r\n字幕識別完成後會在時間軸上方看到整個完整的字幕，由於剪映是中國 抖音 開發提供給創作者的免費剪輯軟體，所以產生出來的字幕為 簡體中文，我們會需要再將字幕轉換成 繁體中文\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n轉換簡體中文字幕為繁體中文字幕 我們可以下載剪映字幕工具箱來做剪映字幕翻譯工具，他提供 Mac 及 Windows 版本\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n剪映字幕工具箱需要 Java 11 以上的環境才可以執行，在執行前請先確定自己作業系統符合的執行環境\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n我這邊是下載 Java OpenJDK 17 版本，這邊可以選擇自己作業系統環境的版本下載安裝即可\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n再來執行剪映字幕工具箱軟體，可以看到左方會自動載入目前剪映的所有編輯中的影片專案，點選該專案後可以在右方看到剛剛剪映 AI 辨識的簡體中文字幕\n點選 簡體轉換為繁體 按鈕後即可立即將字幕翻譯成繁體中文\n翻譯完成後到剪映軟體即可立即看到字幕已經變成繁體中文了\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r \r使用剪映 2.6 AI 辨識繁體中文字幕\r\n畢竟剪映 AI 可以幫我們自動產生出字幕，但畢竟還是有辨識錯誤的狀況發生，剪映字幕工具箱提供字幕編輯工具即可尋找並取代錯誤的文字\n在軟體選單上方點選 編輯 / 替換，並輸入 尋找字串 及 替換字串，並全部取代即可快速將辨識錯誤的文字進行修正\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n輸出字幕 字幕可以直接輸出成 STR 或 TXT 檔，可以再將這個字幕檔案匯入到你使用的剪輯軟體中即可\n\r使用剪映 2.6 AI 辨識繁體中文字幕\r\n參考資料  剪映专业版-全能易用的桌面端剪辑软件-轻而易剪 上演大幕 剪映字幕工具箱 2.0 | 簡轉繁 | SRT 匯出 | SRT 載入 | 字幕編輯 - YouTube GitHub - jackychu0830/jy-srt-tools GitHub - jackychu0830/jy-cn-tw-translator oTranscribe 2021字幕最快上法大公開| AI語音辨識?! Srt輸出\u0026amp;支援Final Cut Pro字幕內置| 步驟完整教學 - YouTube 2021最新最快上字幕的方法！完全免費 支持繁體中文｜剪映專業版 電腦版 簡轉繁 完整教學 比 pyTranscriber 準確率更高 - YouTube 2021必學的上字幕方式！搭配剪映AI輔助上字幕節省超多時間！加入我自己的流程讓斷句更自然精準，改錯字也更容易快速！ - YouTube 【影片上字幕教學】如何快速上字幕 | 免費字幕製作軟體 - YouTube 最快、最準的「AI上字幕」！cc字幕＋內嵌字幕一次搞定！（可上繁中） - YouTube 剪映專業版_百度百科  ","date":"2022-02-16T00:00:42+08:00","image":"https://dev.kejyun.com/article/2022/02/jianying-pro-ai-recognize-zhtw-caption/cover_huc8c64364a9a1eac1e90845a2e0ec0474_111753_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2022/02/jianying-pro-ai-recognize-zhtw-caption/","title":"2022 使用剪映 2.6 版本 AI 辨識產生繁體中文字幕"},{"content":"影片中若有一些畫面想要擷取出來，可以直接使用 PotPlayer 的影像擷取功能將影像儲存成圖片\n\rPotPlayer\r\n設定截圖路徑 點選 選擇截圖儲存路徑，可以設定截圖後的圖片要儲存在哪裡\n\rPotPlayer\r\n設定截圖檔案類型 可以設定的截圖類型有下列 3 種\n BMP JPEG PNG  這邊可以設定你截圖的圖片類型格式\n\rPotPlayer\r\n截圖儲存成圖片到截圖路徑 截圖圖片有 2 種圖片大小可以選擇，一個是 原始影片解析度，另一個是 目前畫面大小，可以點選截圖選單或按快捷鍵進行圖片擷取\n 原始影片解析度 Ctrl + E 目前畫面大小 Ctrl + Alt + E  \rPotPlayer\r\n複製影片圖片到剪貼簿 複製圖片有 2 種圖片大小可以選擇，一個是 原始影片解析度，另一個是 目前畫面大小，可以點選截圖選單或按快捷鍵進行圖片複製\n 原始影片解析度 Ctrl + C 目前畫面大小 Ctrl + Alt + C  \rPotPlayer\r\n參考資料  使用Potplayer將影片連續截圖(可設定間隔秒數及時間範圍) @ 符碼記憶  ","date":"2022-01-18T00:13:29+08:00","image":"https://dev.kejyun.com/article/2022/01/save-video-screenshot-from-potplayer/cover_hu5dfe8c7ed77aac64cd47918e0ae04b0a_381819_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2022/01/save-video-screenshot-from-potplayer/","title":"使用 PotPlayer 擷取影片中的截圖"},{"content":"在啟動 Nginx 時會出現找不到 nginx.pid 的訊息\n$ nginx -s reload [error] 13265#13265: open() \u0026#34;/run/nginx.pid\u0026#34; failed (2: No such file or directory) 找到 nginx.pid 設定 在 /etc/nginx/nginx.conf 的 nginx 設定檔案可以看到 pid 的設定，可以確定 pid 檔案的設定是放在哪邊\n可能是設定在 /run/nginx.pid 或 /var/run/nginx.pid，要看看自己的設定 nginx.pid 設定在哪，我這邊是設定在 /run/nginx.pid\n# /etc/nginx/nginx.conf pid /run/nginx.pid; nginx.pid 生命週期 一般狀況在重啟 nginx 就會產生 nginx.pid 的檔案，關閉或刪除 nginx 程序時 nginx.pid 檔案就會不見\n$ cd /run $ find -name nginx.pid 所以在 nginx 服務啟動時理論上應該就會有 nginx.pid 的檔案，但若這個檔案不見的話可能會有幾種原因\n 誤刪 rm -f nginx.pid 被同事惡搞？？？  解決找不到 nginx.pid 問題 1. 找到 nginx master 程序編號 使用 ps -ef | grep nginx 指令找出目前 nginx 執行中的程序有哪些\n$ ps -ef | grep nginx ps -ef | grep nginx root 12964 1 0 03:27 ? 00:00:00 nginx: master process nginx -c /etc/nginx/nginx.conf www-data 13614 12964 0 03:47 ? 00:00:00 nginx: worker process 上面可以找到 nginx: master 的主要程序編號是 12964\nroot 12964 1 0 03:27 ? 00:00:00 nginx: master process nginx -c /etc/nginx/nginx.conf 2. 建立 nginx.pid 檔案 自己手動在 /run/nginx.pid 路徑下建立 nginx.pid 檔案，並將 nginx 主要程序編號寫入到這個檔案中\n 每個人自己主機的 nginx 程序編號不同，要自己查清楚\n 這裡將 nginx 主要程序編號寫入 /run/nginx.pid 檔案中\n$ cd /run $ touch nginx.pid $ echo \u0026#34;12964\u0026#34; \u0026gt; nginx.pid $ cat nginx.pid 12964 3. 重新啟動 nginx nginx.pid 建立完成後，重新載入 nginx，就不會看到 open() \u0026quot;/run/nginx.pid\u0026quot; failed (2: No such file or directory) 的訊息了\n$ nginx -s reload 參考資料  谁掳走了 nginx.pid 文件？ - 活出自己范儿 - 博客园  ","date":"2022-01-09T00:13:29+08:00","image":"https://dev.kejyun.com/article/2022/01/nginx-pid-no-such-file-or-directory/cover_hud61e929264ddd76bb5843ee2aebe5ae7_192185_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2022/01/nginx-pid-no-such-file-or-directory/","title":"解決 /run/nginx.pid 的 No such file or directory 問題"},{"content":"在執行 nginx 服務時，出現了 conflicting server name on 0.0.0.0:80, ignored 的訊息\n$ nginx -s reload nginx: [warn] conflicting server name \u0026#34;kejyun.com\u0026#34; on 0.0.0.0:80, ignored 通常這個訊息表示，同一個網址或 port 有 2 個以上的設定，通常這樣是不會影響 nginx 的執行，nginx 會以優先載入的設定當作這個網址的設定，後面多餘的設定就會忽略不處理\n但看到這樣的訊息出現還是有點礙眼，可能會導致之後設定錯誤到錯誤的設定檔案，所以儘量還是不要出現錯誤警告訊息比較好\n出現 conflicting server name on 0.0.0.0:80, ignored 可能原因 同一個 server_name 但有相同的 port 像是我們要針對 80 port 的請求都 301 導向至 443 port，所以我們的設定會長得像這樣\nserver { listen 80; server_name kejyun.com; return 301 https://$host$request_uri; } 然後在原本的 80 port 設定檔案加入了 listen 443 ssl; 傾聽 443 port 的設定，但忘了把原本的 80 port 設定刪除，這樣就導致有同樣的 80 port 都在等著處理請求\nserver { listen 80; listen 443 ssl; server_name kejyun.com; } 為了解決這個問題就需要把不需要的 port 設定關掉，這裡就把 443 port 中的 listen 80 註解掉，這樣就不會出現錯誤訊息了\nserver { # listen 80; listen 443 ssl; server_name kejyun.com; } 解決 conflicting server name on 0.0.0.0:80, ignored 1. 找出目前 nginx 設定檔案目錄 通常網站的設定檔案沒有異動的話都會放在下面目錄中\n /etc/nginx/conf.d/ /etc/nginx/sites-enabled/  所以我們會需要找 /etc/nginx 目錄下面所有設定即可，若找不到的話，可以到 nginx 設定檔案 /etc/nginx/nginx.conf 看看還有載入哪些目錄的設定檔\n# /etc/nginx/nginx.conf include /etc/nginx/conf.d/*.conf; include /etc/nginx/sites-enabled/*; 2. 找出 conflicting server name 的網址設定在哪些檔案 使用 grep 指令搜尋 /etc/nginx 目錄中有出現 kejyun.com 字樣的設定在哪，可以看到相關的設定檔案在 /etc/nginx/sites-available/kejyun.com 檔案中，若有其他設定的話，可能會有重複出現在多個檔案，像是 /etc/nginx/sites-available/other.kejyun.com ，那就要從這些設定檔案找到出現設定網址的地方\n$ grep -r kejyun.com /etc/nginx/ /etc/nginx/sites-available/kejyun.com: server_name kejyun.com; /etc/nginx/sites-available/kejyun.com: error_log /var/log/nginx/kejyun.com-error.log error; /etc/nginx/sites-available/kejyun.com: ssl_certificate /etc/letsencrypt/live/kejyun.com/fullchain.pem; # managed by Certbot /etc/nginx/sites-available/kejyun.com: ssl_certificate_key /etc/letsencrypt/live/kejyun.com/privkey.pem; # managed by Certbot /etc/nginx/sites-available/kejyun.com: server_name kejyun.com; 3. 檢查所有 server name 出現的檔案 檢查網域出現的設定檔案看彼此有沒有 重複設定 的地方，像是 設定同樣的 port 在處理請求，找出重複設定的狀況即可解決 onflicting server name on 0.0.0.0:80, ignored 的問題了\n參考資料  服务器部署nginx报错 nginx: [warn] conflicting server name \u0026ldquo;localhost\u0026rdquo; on 0.0.0.0:80, ignored - 坠落鱼 - 博客园  ","date":"2022-01-09T00:13:19+08:00","image":"https://dev.kejyun.com/article/2022/01/nginx-conflicting-server-name/cover_hud61e929264ddd76bb5843ee2aebe5ae7_192185_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2022/01/nginx-conflicting-server-name/","title":"解決 Nginx conflicting server name 問題"},{"content":"在影片中若有哪一段聲音是你想要特別剪輯擷取出來的，可以在使用 Potplayer 播放時順便將聲音剪輯出來\n擷取聲音 使用 PotPlayer 開啟任一你要剪輯的影片後，按下鍵盤的 Shift + G 開啟 聲音錄製的視窗\n1. 設定錄製聲音的目錄 在 資料夾設定 可以設定錄製後影片是要存放到哪\n\rPotPlayer 影片聲音擷取\r\n2. 設定錄製格式 錄製的格式可以選擇你想要的聲音格式，支援的格式有\n WAV OGG FLAC WavPack WMA V1 WMA V2 MP3 MP2 ACC ACC+ AC3 EAC3 DTS TTA  我這邊選擇的是 MP3 格式\n\rPotPlayer 影片聲音擷取\r\n3. 設定音質 聲音取樣的音質可以選擇的有\n 24 kbps 48 kbps 64 kbps 96 kbps 128 kbps 192 kbps 320 kbps  我這邊選擇的是 320 kbps 音質\n\rPotPlayer 影片聲音擷取\r\n4. 設定撥放才錄製 可以勾選 播放開始時自動錄製，在影片撥放的時候才會開始錄製聲音，然後點選開始就可以開始錄製了\n\rPotPlayer 影片聲音擷取\r\n錄製完後聲音檔會存放到剛剛設定的輸出目錄中，這樣就可以簡單地完成影片中的聲音錄製了\n參考資料  Global Potplayer 用PotPlayer將影片的聲音擷取出來 @ ㄡ邦尬 :: 痞客邦 ::  ","date":"2022-01-06T00:13:29+08:00","image":"https://dev.kejyun.com/article/2022/01/extract-audio-from-video-via-potplayer/cover_hu5dfe8c7ed77aac64cd47918e0ae04b0a_381819_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2022/01/extract-audio-from-video-via-potplayer/","title":"使用 PotPlayer 擷取影片中的聲音"},{"content":" Photo by Joseph Pearson on Unsplash\n 在 iPad 我們可以用 Magic Eraser 加上 Apple Pencil 快速地替圖片去背，取得我們想要的圖片素材\nMagic Eraser 去背流程 選擇你要去背的照片，這邊以對 Apple Pencil 去做範例\n\rMagic Eraser 去背\r\n可以透過四周的移動點，縮小素材範圍\n\rMagic Eraser 去背\r \rMagic Eraser 去背\r\n點選下方第一個 Magic Wand 魔術棒，然後選擇下方的 相似色 容許值，若容許值越大，會有越多顏色範圍被選取到\n因為 Apple Pencil 是白色，背景也是白色，所以我這邊的容許值就不能設定很高，不然會連 Apple Pencil 素材也被選到，這邊是設定為 2%，可以根據自己素材的狀況去做調整\n\rMagic Eraser 去背\r\n選擇下方第 2 個 Erase 清除 工具，將 Magic Wand 魔術棒 沒有選到的去背背景手動清除\n\rMagic Eraser 去背\r\n如果有去背錯誤的部分，可以選擇下方第 3 個 Restore 恢復，點選去背錯誤的部分進行恢復\n\rMagic Eraser 去背\r\n點選下方第 4 個 Invert Mask 反轉遮罩 檢查自己去背的部分有沒有去背完全，去背成功的話原本素材的部分會變成去背的形式，而要去背的部分會變成沒有去背的背景\n\rMagic Eraser 去背\r\n點選下方第 5 個 Red Mask 紅色遮罩，將原本去背的 灰白相間 的去背遮罩改為紅色的，讓你更好識別目前去背狀況有沒有完全\n\rMagic Eraser 去背\r\n若都去背檢查完畢，可以點選右上方分享按鈕，將去背的素材匯出\n可以選擇要 Save 儲存成圖片 或是 Other 將圖片匯出做其他處理\n\rMagic Eraser 去背\r \rMagic Eraser 去背\r\n下面就是完整去背的 Apple Pencil 素材\n\rMagic Eraser 去背\r\n參考資料  Magic Eraser - 圖片去背 - Apple 新手道場 在 App Store 上的「Magic Eraser - 輕鬆摳圖, 剪下或移除背景」  ","date":"2021-12-21T00:13:29+08:00","image":"https://dev.kejyun.com/article/2021/12/ipad-magic-eraser-remove-image-background/cover_huf6970a077114e7d248d9840a8871d5a2_1669336_120x120_fill_q75_box_smart1.jpeg","permalink":"https://dev.kejyun.com/article/2021/12/ipad-magic-eraser-remove-image-background/","title":"在 iPad 使用 Magic Eraser 替圖片去背"},{"content":" Photo by Joseph Pearson on Unsplash\n 在 iPad 有一個操作簡單的繪圖軟體 Procreate，我們可以用這套軟體加上 Apple Pencil 快速地替圖片去背，取得我們想要的圖片素材\nProcreate 去背流程 選擇上方 選取工具，並選擇 Freehand 模式，將要去被的素材選起來，這邊用 Apple Pencil 當作去背素材範例\n\rProcreate 去背\r\n素材選取好後，三指在畫面往下滑，可以叫出控制面板，點選 Cut \u0026amp; Paste 將素材剪下貼到新圖層\n\rProcreate 去背\r\n在圖層選單可以看到剛剛選擇到的素材變成一個新的圖層了\n\rProcreate 去背\r\n將其他圖層關掉，只留我們要的素材圖層，避免選到錯誤的去背圖層\n\rProcreate 去背\r\n在選擇上方的選取工具，選擇 Automatic 模式，然後使用 Apple Pencil 點選要去背的背景，按住並往右拉，這樣會自動選取與剛剛點選的背景的相似色，黑底 的部分就是已經被選取的相似色\n往右拉的程度不同會決定 相似色的臨界值 要多大，越往右會越模糊，當往右拉太多，會看到連要去被的 Apple Pencil 素材中間都變成相似色了，這樣就變成素材中間也被去背了，所以要控制好自己的相似色程度，到能夠 剛好把素材包住 就好\n\rProcreate 去背\r \rProcreate 去背\r\n選取好相似色後，點選 Invert 反轉選取，變成將要去背的素材選取起來，然後再點選 Copy \u0026amp; Paste 將素材複製成一個新圖層\n\rProcreate 去背\r \rProcreate 去背\r\n僅留下素材圖層後，你會看到素材中間已經被完美的選取出來了，但周圍有一條白白的線把素材框起來了，那是因為在相似色選取時，沒有將這個部分去除\n\rProcreate 去背\r\n此時選擇橡皮擦，周圍將白白的部份擦掉\n 這個步驟就是在做自動化去背沒有去掉的部分，手動的去做去背優化\n \rProcreate 去背\r\n就像這樣把周圍沒有去背完全的白色線條去掉\n\rProcreate 去背\r\n白色線條去掉完成後，就完成我們的圖片去背流程了\n\rProcreate 去背\r\n點選上方 工具，選擇 Share 頁籤，將這個素材會出成 PNG 格式，就可以得到一個完整的去背的 Apple Pencil 素材了！！\n\rProcreate 去背\r\n下面就是完整去背的 Apple Pencil 素材\n\rProcreate 去背\r\n影片教學 \r\r參考資料  【新手的iPad畫畫課】用Procreate 幫你的手繪小圖去背 - YouTube 在 App Store 上的「Procreate」 Procreate - 繪圖修圖 - Apple 新手道場  ","date":"2021-12-21T00:11:29+08:00","image":"https://dev.kejyun.com/article/2021/12/ipad-procreate-remove-image-background/cover_huf6970a077114e7d248d9840a8871d5a2_1669336_120x120_fill_q75_box_smart1.jpeg","permalink":"https://dev.kejyun.com/article/2021/12/ipad-procreate-remove-image-background/","title":"在 iPad 使用 Procreate 替圖片去背"},{"content":" Photo by Caspar Camille Rubin on Unsplash\n 基本 SQL 語法 SELECT DISTINCT column, AGG_FUNC(column_or_expression), … FROM mytable JOIN another_table ON mytable.column = another_table.column WHERE constraint_expression GROUP BY column HAVING constraint_expression ORDER BY column ASC/DESC LIMIT count OFFSET COUNT; SQL 執行順序 1 . FROM and JOINs FROM 跟 JOIN 會有先執行，決定所有的資料集有哪些必須要查詢，包含所有的 Sub Query 及其產生的 暫存表(temporary tables)\n2. WHERE 決定完所有資料範圍後，首先過濾 WHERE 限制的條件，判斷哪些欄位的資料符合限制條件，在請求執行 FROM 條件時，會直接透過 WHERE 條件限制去過濾請求的資料\n有 Alias 的查詢子條件的 WHERE 限制條件無法馬上執行，因為子條件的資料必須要先撈出來才能夠在做外部的 WHERE 條件過濾\n3. GROUP BY 在透過 WHERE 限制條件過濾完資料後，會將這些資料做 GROUP BY 群組運算，僅會留下唯一的欄位數值，當你需要整合這些資訊時，可以使用 GROUP BY 用在你的查詢 Query 中\n4. HAVING 假如 Query 有 GROUP BY 的條件，可以使用 HAVING 條件去對 GROUP BY 後的資料去做查詢，使用 HAVING 條件過濾後將不符合條件的欄位資料丟棄，就像 WHERE 條件一樣\n5. SELECT 任何的 SELECT 欄位會在這個步驟去執行\n6. DISTINCT 剩餘的欄位資料，如果資料列的資料值有重複時，會被使用 DISTINCT 進行過濾，相同的資料將會被丟棄\n7. ORDER BY 若有使用 ORDER BY 條件，資料列會透過指定欄位去進行排序，可以順向或逆向排序，因為要撈出的欄位已經被 SELECT 撈出來了，所以可以透過這些欄位去進行排序\n8. LIMIT / OFFSET 最後，資料列會透過 LIMIT 及 OFFSET 條件撈出指定的資料範圍，然後將最後的資料列回傳輸出\n參考資料  SQLBolt - Learn SQL - SQL Lesson 12: Order of execution of a Query  ","date":"2021-12-13T01:51:29+08:00","image":"https://dev.kejyun.com/article/2021/12/sql-select-queries-order-of-execution/cover_hu4b13126367a5ce4a9f9cc0eefff24ec3_1608642_120x120_fill_q75_box_smart1.jpg","permalink":"https://dev.kejyun.com/article/2021/12/sql-select-queries-order-of-execution/","title":"SQL Select 撈取順序"},{"content":"OBS 是一個開源的影片錄製及直撥軟體，可以支援跨平台系統\n支援系統  Windows Mac OS Ubuntu  錄音雜訊抑制 - Noise Suppression 雜訊抑制 再透過麥克風錄音，難免會錄到一些環境的噪音，像是 冷氣、電風扇，CPU 風扇、馬路上車流聲等等環境的噪音，可以透過 OBS 降噪過濾功能，將這些噪音過濾掉，讓錄音品質更好\n在錄音設備點選 齒輪圖示，然後點選 Filters，設定過濾功能\n\rOBS 提升錄音聲音品質\r\n在 Filters 視窗中點選左下角加號，加入 Noise Suppression 雜訊抑制 選項\n\rOBS 提升錄音聲音品質\r \rOBS 提升錄音聲音品質\r\n加入降噪選項後，即可在選單左方看到多了降噪的功能，降噪的選項有兩種\n Speex (low CPU usage, low quality) RNNoise (good quality, more CPU usage)  預設為 RNNoise 降噪方式\n\rOBS 提升錄音聲音品質\r\nRNNoise 降噪 降噪品質較好，但會需要 CPU 去運算需要降噪的聲音，若 CPU 運算能力不錯的話，建議使用這個選項\n\rOBS 提升錄音聲音品質\r\nSpeex 降噪 指定降噪的分貝數，預設為 -30 dB，可以測試錄音看看，看看你的環境適合什麼樣的降噪分貝數\n0 dB 是沒有降噪，最高降噪分貝數為 -60 dB，降噪分貝數越多則錄音的聲音會越小聲，要先自行測試自己環境需要降噪的 dB 數為何，避免原本要錄的聲音也被降噪了\n   降噪結果 處理方式     0 dB 無降噪   -60 dB 最大降噪    \rOBS 提升錄音聲音品質\r\n\r提升錄音聲音音量 - Gain 增益 在錄音音量不夠高或過高的時候，可以透過 Gain Filter 去對音量大小進行處理，看要增大音量還是要降低音量\n在 Filters 視窗中點選左下角加號，加入 Gain 增益 選項\n\rOBS 提升錄音聲音品質\r\n聲音增益範圍為 -30 dB ~ 30 dB 可以看你的聲音需要增強或降低多少\n\rOBS 提升錄音聲音品質\r\n\r錄音音量狀態控制 - Noise Gate 噪音閾 當有聲音夠大聲的時候才錄音，不夠大聲就不錄音，可以透過 Noise Gate Filter 對聲音進行偵測，指定音量以上的聲音才會進行收音\n 底噪聲音還是會錄進去，不能取代降噪功能\n \rOBS 提升錄音聲音品質\r\n可以控制音量的 Threshold 閾值 去設定音量要多少會做錄音與否的控制\n   選項 說明     Close Threshold 關閉閾值 小於指定 dB 數，關閉收音   Open Threshold 開啟閾值 大於指定 dB 數，開啟收音    控制音量不會爆音 - Compressor 動態壓縮處理器 在錄音時偶爾會音量過大而出現爆音，可以透過 Compressor 動態壓縮處理器 降低超過指定音量的爆音\n\rOBS 提升錄音聲音品質\r\n只有超過音量的聲音才會被降低，在指定音量範圍內的聲音不會被降低\n   選項 說明     Ratio 比率 降低音量的比率，比率範圍為 32 ~ 1，預設為 10   Threshold 閾值 超過多大的音量會降低，閾值範圍為 -60 dB ~ 0 dB，預設為 -18 dB    \rOBS 提升錄音聲音品質\r\n限制聲音最大大小 - Limiter 限制器 為了避免聲音超過範圍，可以設定聲音不會超過指定分貝數，超過的聲音皆降為 Threshold 臨界值 設定的分貝數\n\rOBS 提升錄音聲音品質\r\n   選項 說明     Threshold 臨界值 聲音限制分貝數，閾值範圍為 -60 dB ~ 0 dB，預設為 -6 dB    \rOBS 提升錄音聲音品質\r\n   限制結果 處理方式     0 dB 無限制   -60 dB 最大限制    參考資料  Open Broadcaster Software | OBS Wiki - Filters Guide | OBS Open Broadcaster Software - 維基百科，自由的百科全書 How to remove background noise in OBS Studio? (Step-by-step guide) OBS分享EP2│讓錄出來的聲音更乾淨，去除背景雜音，限制太大的音量！雜訊抑制、動態壓縮處理器、限制器、增益等內建聲音濾鏡使用分享！ - YouTube  ","date":"2021-11-18T03:11:29+08:00","image":"https://dev.kejyun.com/article/2021/11/obs-voice-quality/cover_hu0a083572d503e6d5b37b78389a9088b4_258919_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/11/obs-voice-quality/","title":"OBS 提升錄音聲音品質"},{"content":"在開啟 VSCode 撰寫程式文件時，都還沒開始使用 CPU 已經起飛了，看了 Activity Monitor 發現 Code Helper (Renderer) 的程序佔滿了整個 CPU 的執行時間\n這是 VSCode 在對整個專案做索引建立時會跑出來的狀況，可以指定特定目錄不建立索引，提高執行效率\n解決方式 1. 開啟 VSCode 的設定 在上方工具列點選 Code \u0026gt; Preferences \u0026gt; Setting 開啟設定\n\rVSCode 的 Code Helper (Renderer)\r\n2. 點選右上方右邊數來第三個按鈕打開 setting.json \rVSCode 的 Code Helper (Renderer)\r\n3. 將排除的目錄設定設定到 setting.json 排除的 json 設定會像這樣，可以指定某個目錄下的檔案步要做專案索引設定，可以針對你的專案結構類型去做設定\n 設定完成後若使用 VSCode 在程式碼中進行關聯跳轉，若有關聯到設定的目錄則不會跳轉，所以要設定時要謹慎注意\n { \u0026#34;search.followSymlinks\u0026#34;: false, \u0026#34;files.exclude\u0026#34;: { \u0026#34;**/.git\u0026#34;: true, \u0026#34;**/.svn\u0026#34;: true, \u0026#34;**/.hg\u0026#34;: true, \u0026#34;**/CVS\u0026#34;: true, \u0026#34;**/.DS_Store\u0026#34;: true, \u0026#34;**/tmp\u0026#34;: true, \u0026#34;**/node_modules\u0026#34;: true, \u0026#34;**/bower_components\u0026#34;: true, \u0026#34;**/dist\u0026#34;: true }, \u0026#34;files.watcherExclude\u0026#34;: { \u0026#34;**/.git/objects/**\u0026#34;: true, \u0026#34;**/.git/subtree-cache/**\u0026#34;: true, \u0026#34;**/node_modules/**\u0026#34;: true, \u0026#34;**/tmp/**\u0026#34;: true, \u0026#34;**/bower_components/**\u0026#34;: true, \u0026#34;**/dist/**\u0026#34;: true } } 設定完成後會長得像這樣\n\rVSCode 的 Code Helper (Renderer)\r\n4. 重新開啟 VSCode 載入最新設定 在設定完成後需要重新開啟 VSCode 讓設定生效，若重新開啟後還是有看到 Code Helper (Renderer) 還是佔滿 CPU 資源，建議電腦重開機即可\n完成後電腦 CPU 過高的問題就解決了，CPU 風扇不再起飛\n參考資料  mac上vscode始终打开code helper这个进程，发热严重 - SegmentFault 思否 Code Helper佔用大量CPU和記憶體 - IT閱讀  ","date":"2021-11-01T11:51:29+08:00","image":"https://dev.kejyun.com/article/2021/11/vscode-code-helper-cpu-too-high/cover_hu49e74c47d67cba5ea2db71d48bbe8f57_690213_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/11/vscode-code-helper-cpu-too-high/","title":"VSCode 的 Code Helper (Renderer) 導致 CPU 使用過高，風扇起飛"},{"content":"在 Mac 開發 Node.js 程式時可以使用 NVM 來管理 Node.js 的版本，可以針對不同的專案需求去做簡單的 Node.js 版本切換\n安裝 NVM 執行 curl 指令進行安裝\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash 設定 NVM 環境變數 Terminal 的設定檔案通常會放在 ~/.bash_profile、~/.zshrc、~/.profile、~/.bashrc 檔案中，在開啟 Terminal 時會自動載入客製化設定，需要設定開啟時去載入 NVM 的相關設定\n預設在安裝完成後會自動將 NVM 設定檔案自動加入您的設定檔案，若沒有自動加入時則自行手動加入即可\nexport NVM_DIR=\u0026#34;$([ -z \u0026#34;${XDG_CONFIG_HOME-}\u0026#34; ] \u0026amp;\u0026amp; printf %s \u0026#34;${HOME}/.nvm\u0026#34; || printf %s \u0026#34;${XDG_CONFIG_HOME}/nvm\u0026#34;)\u0026#34; [ -s \u0026#34;$NVM_DIR/nvm.sh\u0026#34; ] \u0026amp;\u0026amp; \\. \u0026#34;$NVM_DIR/nvm.sh\u0026#34; # This loads nvm 安裝時自動加入 NVM 設定檔範例\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash 14:44:48 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 14984 100 14984 0 0 75848 0 --:--:-- --:--:-- --:--:-- 81879 =\u0026gt; Downloading nvm from git to \u0026#39;/Users/kj/.nvm\u0026#39; =\u0026gt; Cloning into \u0026#39;/Users/kj/.nvm\u0026#39;... remote: Enumerating objects: 348, done. remote: Counting objects: 100% (348/348), done. remote: Compressing objects: 100% (297/297), done. remote: Total 348 (delta 39), reused 153 (delta 26), pack-reused 0 Receiving objects: 100% (348/348), 201.00 KiB | 2.16 MiB/s, done. Resolving deltas: 100% (39/39), done. =\u0026gt; Compressing and cleaning up git repository =\u0026gt; Appending nvm source string to /Users/kj/.zshrc =\u0026gt; Appending bash_completion source string to /Users/kj/.zshrc =\u0026gt; Close and reopen your terminal to start using nvm or run the following to use it now: export NVM_DIR=\u0026#34;$HOME/.nvm\u0026#34; [ -s \u0026#34;$NVM_DIR/nvm.sh\u0026#34; ] \u0026amp;\u0026amp; \\. \u0026#34;$NVM_DIR/nvm.sh\u0026#34; # This loads nvm [ -s \u0026#34;$NVM_DIR/bash_completion\u0026#34; ] \u0026amp;\u0026amp; \\. \u0026#34;$NVM_DIR/bash_completion\u0026#34; # This loads nvm bash_completion 列出可安裝的 Node.js 版本 使用 nvm ls-remote 即可列出所有目前可安裝的 Node.js 版本\nnvm ls-remote 列出 Node.js 版本範例\n$ nvm ls-remote v16.6.2 v16.7.0 v16.8.0 v16.9.0 v16.9.1 v16.10.0 v16.11.0 v16.11.1 v16.12.0 -\u0026gt; v16.13.0 (Latest LTS: Gallium) v17.0.0 v17.0.1 安裝指定版本 Node.js 使用 nvm install 指令即可指定安裝 node.js 版本\nnvm install \u0026lt;node-js-version\u0026gt; NVM 安裝 node.js 範例\n$ nvm install v16.13.0 Downloading and installing node v16.13.0... Downloading https://nodejs.org/dist/v16.13.0/node-v16.13.0-darwin-x64.tar.xz... ####################################################################################### 100.0% Computing checksum with shasum -a 256 Checksums matched! Now using node v16.13.0 (npm v8.1.0) Creating default alias: default -\u0026gt; v16.13.0 NVM 安裝 Node.js 版本路徑 使用 node -v時可以看到已經安裝完成的 v16.13.0 版本的 Node.js\n$ node -v v16.13.0 使用 which node 可以看到 Node.js 被安裝在家目錄中的 .nvm/versions/node/v16.13.0 目錄中\n$ which node /Users/kj/.nvm/versions/node/v16.13.0/bin/node 所以當有不同的版本 Node.js 時，NVM 會將不同版本放到不同的目錄中並作切換\n列出目前 NVM 有安裝的 Node.js 版本 使用 nvm ls 指令即可列出目前系統已安裝的所有 node.js 版本\nnvm ls 列出已安裝已安裝的所有 node.js 版本範例\n$ nvm ls -\u0026gt; v16.13.0 default -\u0026gt; v16.13.0 iojs -\u0026gt; N/A (default) unstable -\u0026gt; N/A (default) node -\u0026gt; stable (-\u0026gt; v16.13.0) (default) stable -\u0026gt; 16.13 (-\u0026gt; v16.13.0) (default) lts/* -\u0026gt; lts/gallium (-\u0026gt; v16.13.0) lts/argon -\u0026gt; v4.9.1 (-\u0026gt; N/A) lts/boron -\u0026gt; v6.17.1 (-\u0026gt; N/A) lts/carbon -\u0026gt; v8.17.0 (-\u0026gt; N/A) lts/dubnium -\u0026gt; v10.24.1 (-\u0026gt; N/A) lts/erbium -\u0026gt; v12.22.7 (-\u0026gt; N/A) lts/fermium -\u0026gt; v14.18.1 (-\u0026gt; N/A) lts/gallium -\u0026gt; v16.13.0 使用指定版本 Node.js 使用 nvm use 指令即可隨時切換想要的 Node.js 版本\nnvm use \u0026lt;node-js-version\u0026gt; 使用 nvm use 指令切換範例\n$ nvm use v16.13.0 Now using node v16.13.0 (npm v8.1.0) 設定預設 Node.js 版本 因為透過 nvm 可以同時有多個 Node.js 版本在系統中，若常用的版本我會把他設定為預設使用的版本，若有要使用其他不同的版本時，我再做切換\n使用 nvm alias default 指令即可設定預設的 node.js 版本\nnvm alias default \u0026lt;node-js-version\u0026gt; 設定預設 node.js 版本範例\n$ nvm alias default v16.13.0 default -\u0026gt; v16.13.0 參考資料  GitHub - nvm-sh/nvm: Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions  ","date":"2021-11-01T09:51:29+08:00","image":"https://dev.kejyun.com/article/2021/11/nvm-install-node-on-mac-os/cover_hu96d5b156d0b26555e69b962cdb5684b3_121765_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/11/nvm-install-node-on-mac-os/","title":"在 MacOS 使用 nvm 安裝 Node 環境"},{"content":"在 Mac 開發 Node.js 軟體通常支援性是比較好的，但如果想在 Windows 開發 Node.js 的話，也可以用 NVM 來管理 Node.js 的版本，可以針對不同的專案需求去做簡單的 Node.js 版本切換\n環境\n Windows 10 x64 node.js 14.17.5\n 安裝 Windows 版本的 nvm-windows 到 GitHub coreybutler/nvm-windows 的 Repo 下載 nvm-setup.zip 檔案並進行安裝，檔案解壓所後照正常的安裝步驟安裝即可\n我這邊使用的是 Windows PowerShell，如果安裝完成後必須要完整的重開 Windows PowerShell，這樣才能夠讓 Windows PowerShell 讀取到對的 NVM 環境變數\n如果是要讓 VS Code 的 Terminal 能夠吃到 NVM 的環境變數，則需要整台電腦重開機才吃的到設定，只重開 VS Code 是沒有用的\n\rNVM on Windows 10\r\n列出可以安裝的 Node.js 版本  nvm list available\n 這邊指令跟 Mac 有點不一樣，不是使用 nvm ls-remote 去列出遠端可以安裝的 Node.js 版本，而是用 nvm list available\nPS C:\\Users\\KJ\u0026gt; nvm list available | CURRENT | LTS | OLD STABLE | OLD UNSTABLE | |--------------|--------------|--------------|--------------| | 16.7.0 | 14.17.5 | 0.12.18 | 0.11.16 | | 16.6.2 | 14.17.4 | 0.12.17 | 0.11.15 | | 16.6.1 | 14.17.3 | 0.12.16 | 0.11.14 | | 16.6.0 | 14.17.2 | 0.12.15 | 0.11.13 | | 16.5.0 | 14.17.1 | 0.12.14 | 0.11.12 | | 16.4.1 | 14.16.1 | 0.12.12 | 0.11.10 | | 16.4.0 | 14.16.0 | 0.12.11 | 0.11.9 | | 16.3.0 | 14.15.5 | 0.12.10 | 0.11.8 | | 16.2.0 | 14.15.4 | 0.12.9 | 0.11.7 | | 16.1.0 | 14.15.3 | 0.12.8 | 0.11.6 | | 16.0.0 | 14.15.2 | 0.12.7 | 0.11.5 | | 15.14.0 | 14.15.1 | 0.12.6 | 0.11.4 | | 15.13.0 | 14.15.0 | 0.12.5 | 0.11.3 | | 15.12.0 | 12.22.5 | 0.12.4 | 0.11.2 | | 15.11.0 | 12.22.4 | 0.12.3 | 0.11.1 | | 15.9.0 | 12.22.2 | 0.12.1 | 0.9.12 | | 15.8.0 | 12.22.1 | 0.12.0 | 0.9.11 | This is a partial list. For a complete list, visit https://nodejs.org/download/release 如果沒有看到自己想要安裝的版本，可以到 Node.js Release 去找自己需要的 Node.js 版本\n安裝 Node.js 14.17.5  nvm install\n 使用 nvm install 去安裝 Node.js 後會出現作業系統版本不符合，我系統是使用 Windows 10 64 bits 的系統，預設安裝的版本是 32 bits 的版本\nPS C:\\Users\\KJ\u0026gt; nvm install 14.17.5 nvm.0.0 Node.js vnvm.0.0 is only available in 32-bit. 要使用 64 bits 版本時，在指令最後方加入 64 的字樣，就可以指定 64 bits 的版本\n nvm install 14.17.5 64\n PS C:\\Users\\KJ\u0026gt; nvm install 14.17.5 64 Downloading node.js version 14.17.5 (64-bit)... Complete Creating C:\\Users\\KJ\\AppData\\Roaming\\nvm\\temp Downloading npm version 6.14.14... Complete Installing npm v6.14.14... Installation complete. If you want to use this version, type nvm use 14.17.5 指定使用 Node.js 版本  nvm use 14.17.5\n 安裝完成後可以使用 nvm use 去指定要使用的 Node.js 版本，在過程中會要求管理者權限去做處理\nNVM 會在環境變數設定 2 個變數 NVM_HOME 及 NVM_SYMLINK，在使用 nvm use 時 NVM 會將指定的 Node.js 版本關連到 NVM_SYMLINK 路徑下，所以需要管理者權限去做關聯存取\n   名稱 設定 說明     NVM_HOME C:\\Users\\KJ\\AppData\\Roaming\\nvm NVM 存放目錄   NVM_SYMLINK C:\\Program Files\\nodejs NVM 軟連結路徑    這樣我們就可以開始在 Windows 10 使用 NVM 去管理 Node.js 版本了\n列出已安裝的 Node.js 版本  nvm list\n PS C:\\Users\\KJ\u0026gt;nvm list 16.7.0 * 14.17.5 (Currently using 64-bit executable) nvm 指令清單 nvm Running version 1.1.7. Usage: nvm arch : Show if node is running in 32 or 64 bit mode. nvm install \u0026lt;version\u0026gt; [arch] : The version can be a node.js version or \u0026#34;latest\u0026#34; for the latest stable version. Optionally specify whether to install the 32 or 64 bit version (defaults to system arch). Set [arch] to \u0026#34;all\u0026#34; to install 32 AND 64 bit versions. Add --insecure to the end of this command to bypass SSL validation of the remote download server. nvm list [available] : List the node.js installations. Type \u0026#34;available\u0026#34; at the end to see what can be installed. Aliased as ls. nvm on : Enable node.js version management. nvm off : Disable node.js version management. nvm proxy [url] : Set a proxy to use for downloads. Leave [url] blank to see the current proxy. Set [url] to \u0026#34;none\u0026#34; to remove the proxy. nvm node_mirror [url] : Set the node mirror. Defaults to https://nodejs.org/dist/. Leave [url] blank to use default url. nvm npm_mirror [url] : Set the npm mirror. Defaults to https://github.com/npm/cli/archive/. Leave [url] blank to default url. nvm uninstall \u0026lt;version\u0026gt; : The version must be a specific version. nvm use [version] [arch] : Switch to use the specified version. Optionally specify 32/64bit architecture. nvm use \u0026lt;arch\u0026gt; will continue using the selected version, but switch to 32/64 bit mode. nvm root [path] : Set the directory where nvm should store different versions of node.js. If \u0026lt;path\u0026gt; is not set, the current root will be displayed. nvm version : Displays the current running version of nvm for Windows. Aliased as v. 參考資料  Releases · coreybutler/nvm-windows · GitHub Windows 10 安裝並使用 nvm 切換 NodeJS 版本 | Welcome.Web.World Node.js v5.4.0 is only available in 32-bit. · Issue #130 · coreybutler/nvm-windows · GitHub 在原生 Windows 上設定 NodeJS | Microsoft Docs [Node.JS] 在 Windows 下使用 nvm 切換 Node 版本 windows - \u0026lsquo;npm\u0026rsquo; is not recognized as internal or external command, operable program or batch file - Stack Overflow Npm Is Not Recognized By Visual Studio  ","date":"2021-08-22T09:51:29+08:00","image":"https://dev.kejyun.com/article/2021/08/nvm-install-node-on-windows-10/cover_huc9235ed498fbb6363f3687f1288de870_86277_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/nvm-install-node-on-windows-10/","title":"在 Windows 使用 nvm 安裝 Node 環境"},{"content":"Gitlab 與 Github 都有提供靜態空間頁面給我們放上靜態的 html, css, js 檔案，可以變成一個靜態頁面供網友存取，但 Github pages 的空間如果要變成私密的方式，不想要讓其他人可以直接下載你整包的網站 html 的話，只能 付費 才能夠有這個功能，Gitlab pages 則是免費就可以使用私密的方式架設你的網站，不需要額外付費\n建立 Gitlab Pages 目錄 在你的專案中建立 public 目錄，並將你要部署到 GitLab Pages 的檔案全部放在這個 public 目錄中，這個目錄的 index.html 是網站的進入點\n\rGitLab Pages\r\n設定 Gitlab Pages 部署方式 建立 .gitlab-ci.yml 檔案，在 artifacts 設定 Gitlab pages 的目錄，並設定只有在 main 的分支才會部署\n# .gitlab-ci.ymlimage:alpine:latestpages:stage:deployscript:- echo \u0026#39;Do nothing\u0026#39;# gitlab page 目錄artifacts:paths:- public# 只有在 main 分支的 public 目錄才會被部署only:- main部署 Gitlab Pages 將建立的網站 public 目錄及 .gitlab-ci.yml 檔案 push 到 Gitlab，然後到 Repo 的 CI/CD \u0026gt; Piplines 可以看到會立即執行部署的指令，看到狀態變更為 passed 就表示執行成功了\n\rGitLab Pages\r\n檢視部署的 Gitlab Pages 在 Repo 的 Settings \u0026gt; Pages 那邊可以看到你的 Gitlab Pages 的網址，預設是 https://\u0026lt;帳號\u0026gt;.gitlab.io/\u0026lt;專案位置\u0026gt;，從這裡就可以看到你部署上去的頁面了\n\rGitLab Pages\r\n設定 Gitlab Pages 存取權限 Gitlab Pages 可以做存取的限制\n Repo 的成員才可以看到此頁面 每個人都可以看到此頁面  GitLab Pages 預設是「Repo 的成員才可以看到此頁面」，若你想要設定 Gitlab 存取權限的話，可以到 Setting \u0026gt; General 頁面，然後在頁面下方的 Visibility, project features, permissions 區塊點選 Expand 展開權限設定\n\rGitLab Pages\r \rGitLab Pages\r\n在 Visibility, project features, permissions 下方找到 Pages 區塊，選擇存取的權限按下儲存即可\n Only Project Members Everyone  這樣就可以公開您的 Gitlab Pages 在網路上給大家存取了\n\rGitLab Pages\r\n自訂網址 \u0026amp; SSL 憑證 如果你要自訂你網站的網址，可以點選右上方的 New Domain 按鈕，建立頁面網址，在頁面中輸入你要的網址，並請 Gitlab 幫您申請免費的 Let\u0026rsquo;s Encrypt SSL 憑證\n\rGitLab Pages\r \rGitLab Pages\r\n建立完成後將 DNS 設定至您的設定內，並做驗證即可，驗證完成後就可以看到您的頁面可以透過自己的網址去連線了\n\rGitLab Pages\r\nCloudflare DNS SSL 憑證 若你使用 Cloudflare 做你的 DNS 管理，必須要在 SSL 設定設定為 full 才能夠正確的取得 Gitlab Pages 的免費自訂網址 SSL 網址憑證\n\rGitLab Pages\r\n參考資料  GitLab Pages | GitLab Tutorial: Create a GitLab Pages website from scratch | GitLab Exploring GitLab Pages | GitLab  ","date":"2021-08-20T11:51:29+08:00","image":"https://dev.kejyun.com/article/2021/08/gitlab-page-2021/cover_huf9940f3ab2e7673d82e23154b8874ea1_161746_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/gitlab-page-2021/","title":"使用 Gitlab page 建立私密的靜態部落格網站"},{"content":"在 docker 我們會建立自己專案的環境，讓他可以運行我們的專案、看是 php、python、golang \u0026hellip; 之類的運行環境，而專案會需要定期排程去執行指定的程式，以下以 php 為例\n建立自訂 crontab 檔案 在專案下會建立一個 crontab 指令的檔案 my_docker_crontab\n# my_docker_crontab # m h dom mon dow command * * * * * /app/job.php 環境安裝 cron 映像檔通常是最小單位的檔案，所以不會有 cron 的排程程式，所以在建立 Docker 環境時必須要自己指定去安裝 cron 軟體，這樣就可以在我們自己自定義的環境去跑 cron 定期排程去執行程式\nRUN apt-get update \u0026amp;\u0026amp; apt-get install -y cron加入自訂的 crontab 檔案 在 docker 專案下將 crontab 指令的檔案 my_docker_crontab 複製到 docker 的目錄下，並指定 crontab 去執行此 crontab 檔案\n# 加入 docker 專案的自訂 crontabADD my_docker_crontab /etc/cron.d/my_docker_crontab# 指定 crontab 檔案RUN crontab /etc/cron.d/my_docker_crontab執行 crontab 在最後使用指令執行 crontab，這樣就可以開始每分鐘定期執行程式了\n# 執行 crontabCMD [\u0026#34;cron\u0026#34;, \u0026#34;-f\u0026#34;]以下是完整的 Dockerfile 檔案\nFROMphp:7.4-fpmWORKDIR/varRUN apt-get update \u0026amp;\u0026amp; apt-get install -y cron libpq-dev libpng-dev libzip-dev zipRUN docker-php-ext-install pgsql pdo_pgsql gd zip\\ \u0026amp;\u0026amp; docker-php-ext-enable opcache# 加入 docker 專案的自訂 crontabADD my_docker_crontab /etc/cron.d/my_docker_crontab# 指定 crontab 檔案RUN crontab /etc/cron.d/my_docker_crontab# 執行 crontabCMD [\u0026#34;cron\u0026#34;, \u0026#34;-f\u0026#34;]執行 docker-compose 將執行 Dockerfile 的設定寫在 docker-compose.yml 檔案，並執行 docker-compose up -d 將 cronjob 的容器放在背景執行\n# docker-compose.ymlversion:\u0026#39;3\u0026#39;services:cronjob:container_name:docker_php_cronjobbuild:.image:docker_php_cronjob:v1.0volumes:- /web/app/:/apprestart:alwaysdocker-compose up -d 參考資料  cron - docker root crontab job not executing - Stack Overflow laravel-docker-cron/Dockerfile at master · yupmin/laravel-docker-cron Task Scheduling - Laravel - The PHP Framework For Web Artisans 在 Docker 中使用 Laravel schedule | Laravel China 社区  ","date":"2021-08-20T09:51:29+08:00","image":"https://dev.kejyun.com/article/2021/08/docker-crontab/cover_hu5b58a774fb95c4b1932a88dee20e7fbb_142236_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/docker-crontab/","title":"docker crontab 定期排程執行程式"},{"content":"在使用 docker-compose 建立 Docker 時，會去使用 Dockerfile 去建立自己想要的環境，但建立完成後 docker 會自行命名這個 Dockerfile 的 images\nversion:\u0026#39;3\u0026#39;services:cronjob:container_name:dev_cronjobbuild:cron.Dockerfilevolumes:- /web/:/var/webrestart:always$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE dev_cronjob latest 91e20032b3ff 23 minutes ago 502MB 若想要有自己指定的 images 名稱讓我們方便管理的話，可以在 docker-compose.yml 檔案中加入 images 去指定建立完成後的映像檔名稱\n images: \u0026lt;images-name\u0026gt;:\u0026lt;images-version\u0026gt;\n version:\u0026#39;3\u0026#39;services:cronjob:container_name:dev_cronjobbuild:cron.Dockerfileimages:my_cron_image:v1.0volumes:- /web/:/var/webrestart:always這樣使用 docker-compose build 後，就可以在 docker images 看到這個映像檔有他自己的命名了\n$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE my_cron_image v1.0 91e20032b3ff 23 minutes ago 502MB 參考資料  Compose file version 3 reference | Docker Documentation  ","date":"2021-08-20T09:50:29+08:00","image":"https://dev.kejyun.com/article/2021/08/docker-compose-build-images-name/cover_hu0d4e94c98962ec6b7a6200e33610a675_109897_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/docker-compose-build-images-name/","title":"docker compose build 映像檔名稱"},{"content":"安裝 Oh My Zsh $ sh -c \u0026#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\u0026#34; 安裝 Nerd 字型 可以使用 powerlevel10k 推薦的 MesloLGS NF 字型\n MesloLGS NF Regular.ttf MesloLGS NF Bold.ttf MesloLGS NF Italic.ttf MesloLGS NF Bold Italic.ttf  在 Mac 環境將字體下載後，點開檔案按右下方的 Install Font 即可安裝字型\n\rpowerful-terminal-command-line-powerlevel10k\r\n設定 iTerm2 字形 在 iTerm2 的 preference 中，點選 Profile \u0026gt; Text 頁籤，修改下方的 Font 設定為剛剛安裝的 MesloLGS NF 字型\n\rpowerful-terminal-command-line-powerlevel10k\r\n下載 powerlevel10k 到 Oh My Zsh 主題中 git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k 設定 ZSH 主題為 powerlevel10k/powerlevel10k 修改 ~/.zshrc 檔案，將 ZSH_THEME 改為 powerlevel10k/powerlevel10k\nZSH_THEME=\u0026#34;powerlevel10k/powerlevel10k\u0026#34; 設定 powerlevel10k 在命令列輸入 p10k configure 即可設定您要的主題樣式\np10k configure \rpowerful-terminal-command-line-powerlevel10k\r\n設定完成後就可以開始用漂亮的 Termianl 介面了，隨時可以用 p10k configure 變更 Termianl 主題\nHint 在尚未設定 powerlevel10k 時，每次開啟 iTerm2 都會要求設定樣式，若要關閉此提示，可以輸入下方指令關閉\necho \u0026#39;POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true\u0026#39; \u0026gt;\u0026gt;! ~/.zshrc 參考資料  GitHub - romkatv/powerlevel10k: A Zsh theme Oh My Zsh - a delightful \u0026amp; open source framework for Zsh GitHub - ryanoasis/nerd-fonts: Iconic font aggregator, collection, \u0026amp; patcher. 3,600+ icons, 50+ patched fonts: Hack, Source Code Pro, more. Glyph collections: Font Awesome, Material Design Icons, Octicons, \u0026amp; more 【分享】Oh My Zsh + powerlevel10k 快速打造好看好用的 command line 環境 | by Holy | Medium  ","date":"2021-08-16T09:50:29+08:00","image":"https://dev.kejyun.com/article/2021/08/powerful-terminal-command-line-powerlevel10k/cover_hu84459e5b4ae7a52bf5b67b42f57bdcae_62099_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/powerful-terminal-command-line-powerlevel10k/","title":"打造漂亮好用的 Terminal by powerlevel10k"},{"content":"Ubuntu 16.04 一開機時，突然出現了下面的訊息，再次重新開機也沒用一樣卡住無限鬼打牆\n Welcome to emergency mode! After logging in, type “journalctl -xb” to view system logs, “systemctl reboot” to reboot, “systemctl default” or ^D to try again boot into default mode. Give root password for maintained (or press Control-D to continue).\n 輸入 root 密碼登入打入 journalctl -xb 檢查開機訊息時，發現在 mount 硬碟時整個卡住，導致系統無法順利啟動\n這個錯誤訊息常發生在載入 外部硬碟、網路硬碟 等沒有載入導致\n解決方式 在 emergency mode 登入 root 帳號後輸入下列指令讓 /etc/fstab 檔案有被寫入的權限\n$ mount -n -o remount,rw / /etc/fstab 是自動 mount 的設定檔案，使用 vi 或 vim 編輯此檔案\n$ sudo vim /etc/fstab 在 /etc/fstab 檔案中將卡住的 mount 硬碟輸入 #  註解掉\n# 註解前 UUID=bcb03e9a-fa15-4a6d-a8ea-ac2c8180654d /data ext4 errors=remount-ro 0 0 # 註解後 # 這一行掛載出現問題，在前方加入註解取消掛載 # UUID=bcb03e9a-fa15-4a6d-a8ea-ac2c8180654d /data ext4 errors=remount-ro 0 0 註解掛載指令後 /etc/fstab 檔案會長的像這樣\n# /etc/fstab: static file system information. # # Use \u0026#39;blkid\u0026#39; to print the universally unique identifier for a # device; this may be used with UUID= as a more robust way to name devices # that works even if disks are added and removed. See fstab(5). # # \u0026lt;file system\u0026gt; \u0026lt;mount point\u0026gt; \u0026lt;type\u0026gt; \u0026lt;options\u0026gt; \u0026lt;dump\u0026gt; \u0026lt;pass\u0026gt; # / was on /dev/sda2 during installation UUID=4fb9f563-7ae4-4df9-a028-fdc6b9e4f1a5 / ext4 errors=remount-ro 0 1 # swap was on /dev/sda3 during installation UUID=cf0cf85a-6fed-4c43-901d-c946d6e1c5fa none swap sw 0 0 # 這一行掛載出現問題，在前方加入註解取消掛載 # UUID=bcb03e9a-fa15-4a6d-a8ea-ac2c8180654d /data ext4 errors=remount-ro 0 0 輸入指令切換成預設模式\n$ systemctl default 重新開機後就可以正常進入系統了\nsystemctl reboot 參考資料  Boot Into Rescue Mode Or Emergency Mode In Ubuntu 20.04 / 18.04 How to exit emergency mode and boot to default mode in Linux | Velan ubuntu啟動出現welcome to emergency mode! Press Enter for maintenance 的檔案。 | 程式前沿 linux出現welcome to emergency mode! 解決方法 - IT閱讀 阿就操場啊~: Linux開機進入emergency mode Linux 开机显示：welcome to emergency mode 的解决方法_Lance的博客-CSDN博客 阿就操場啊~: /etc/fstab的dump與pass  ","date":"2021-08-16T08:50:29+08:00","image":"https://dev.kejyun.com/article/2021/08/welcome-to-emergency-mode-on-ubuntu-1604/cover_hua4338aefb32c666dd4cd0550f2c46c4a_1031986_120x120_fill_box_smart1_2.png","permalink":"https://dev.kejyun.com/article/2021/08/welcome-to-emergency-mode-on-ubuntu-1604/","title":"Welcome to emergency mode on Ubuntu 16.04，無法正確 mount 硬碟"},{"content":"狀況 使用管理者帳號登入 MySQL\nmysql -h localhost -u root -p 在 MySQL Master 機器中輸入 show slave status\\G 檢查 Slave 機器狀態\nmysql\u0026gt; show slave status\\G *************************** 1. row *************************** Slave_IO_State: Master_Host: 192.168.1.2 Master_User: rep Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.155171 Read_Master_Log_Pos: 71744684 Relay_Log_File: master-relay-bin.089272 Relay_Log_Pos: 63995870 Relay_Master_Log_File: mysql-bin.155169 Slave_IO_Running: No Slave_SQL_Running: No Replicate_Do_DB: Replicate_Ignore_DB: mysql Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: mysql.% Last_Errno: 1594 Last_Error: Relay log read failure: Could not parse relay log event entry. The possible reasons are: the master\u0026#39;s binary log is corrupted (you can check this by running \u0026#39;mysqlbinlog\u0026#39; on the binary log), the slave\u0026#39;s relay log is corrupted (you can check this by running \u0026#39;mysqlbinlog\u0026#39; on the relay log), a network problem, or a bug in the master\u0026#39;s or slave\u0026#39;s MySQL code. If you want to check the master\u0026#39;s binary log or slave\u0026#39;s relay log, you will be able to know their names by issuing \u0026#39;SHOW SLAVE STATUS\u0026#39; on this slave. Skip_Counter: 0 Exec_Master_Log_Pos: 63995665 Relay_Log_Space: 182256807 Until_Condition: None Until_Log_File: Until_Log_Pos: 0 Master_SSL_Allowed: No Master_SSL_CA_File: Master_SSL_CA_Path: Master_SSL_Cert: Master_SSL_Cipher: Master_SSL_Key: Seconds_Behind_Master: NULL Master_SSL_Verify_Server_Cert: No Last_IO_Errno: 0 Last_IO_Error: Last_SQL_Errno: 1594 Last_SQL_Error: Relay log read failure: Could not parse relay log event entry. The possible reasons are: the master\u0026#39;s binary log is corrupted (you can check this by running \u0026#39;mysqlbinlog\u0026#39; on the binary log), the slave\u0026#39;s relay log is corrupted (you can check this by running \u0026#39;mysqlbinlog\u0026#39; on the relay log), a network problem, or a bug in the master\u0026#39;s or slave\u0026#39;s MySQL code. If you want to check the master\u0026#39;s binary log or slave\u0026#39;s relay log, you will be able to know their names by issuing \u0026#39;SHOW SLAVE STATUS\u0026#39; on this slave. Replicate_Ignore_Server_Ids: Master_Server_Id: 2 Master_UUID: 910223b9-bfbc-11e6-a5cc-f23c91e0377d Master_Info_File: /var/lib/mysql/master.info SQL_Delay: 0 SQL_Remaining_Delay: NULL Slave_SQL_Running_State: Master_Retry_Count: 86400 Master_Bind: Last_IO_Error_Timestamp: Last_SQL_Error_Timestamp: 210806 10:39:01 Master_SSL_Crl: Master_SSL_Crlpath: Retrieved_Gtid_Set: Executed_Gtid_Set: Auto_Position: 0 Replicate_Rewrite_DB: Channel_Name: Master_TLS_Version: 在狀態中發現 Last_SQL_Error 出現以下訊息\n Relay log read failure: Could not parse relay log event entry. The possible reasons are: the master\u0026rsquo;s binary log is corrupted (you can check this by running \u0026lsquo;mysqlbinlog\u0026rsquo; on the binary log), the slave\u0026rsquo;s relay log is corrupted (you can check this by running \u0026lsquo;mysqlbinlog\u0026rsquo; on the relay log), a network problem, or a bug in the master\u0026rsquo;s or slave\u0026rsquo;s MySQL code. If you want to check the master\u0026rsquo;s binary log or slave\u0026rsquo;s relay log, you will be able to know their names by issuing \u0026lsquo;SHOW SLAVE STATUS\u0026rsquo; on this slave.\n 造成錯誤可能原因  網路連線問題 Slave 主機負載過大導致 relay-log 格式錯誤  解決方式 1. 找出已執行的同步節點資訊 在 show slave status\\G 指令中的訊息找到下方資訊\nRelay_Master_Log_File: mysql-bin.155169 # Master 已讀取 Slave 的 binlog 檔案 Exec_Master_Log_Pos: 63995665 # 已執行的指令位置 2. 停止目前 Slave 同步 mysql\u0026gt;stop slave; 3. 重新設定同步位置為上次已執行的節點 mysql\u0026gt;change master to master_log_file=\u0026#39;mysql-bin.155169\u0026#39; , master_log_pos=63995665; 4. 重新啟動 Slave 同步 mysql\u0026gt;start slave; 重新啟動後，MySQL Slave 的同步會從上次已成功執行的節點重新開始同步，會產生新的 binlog，將此節點後續的資料繼續完成同步\n\r5. 重新確認目前同步狀況 再一次執行 show slave status\\G 確認同步狀況，在狀態中發現 Last_SQL_Error 已經沒有之前的同步問題了\n然後會看到 Seconds_Behind_Master: 13798 有延遲同步的秒數，表示目前正在同步中\nmysql\u0026gt; show slave status\\G *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 192.168.1.2 Master_User: rep Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.155171 Read_Master_Log_Pos: 72276030 Relay_Log_File: master-relay-bin.000006 Relay_Log_Pos: 1180855 Relay_Master_Log_File: mysql-bin.155171 Slave_IO_Running: Yes Slave_SQL_Running: Yes Replicate_Do_DB: Replicate_Ignore_DB: mysql Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: mysql.% Last_Errno: 0 Last_Error: Skip_Counter: 0 Exec_Master_Log_Pos: 1180650 Relay_Log_Space: 72276478 Until_Condition: None Until_Log_File: Until_Log_Pos: 0 Master_SSL_Allowed: No Master_SSL_CA_File: Master_SSL_CA_Path: Master_SSL_Cert: Master_SSL_Cipher: Master_SSL_Key: Seconds_Behind_Master: 13798 Master_SSL_Verify_Server_Cert: No Last_IO_Errno: 0 Last_IO_Error: Last_SQL_Errno: 0 Last_SQL_Error: Replicate_Ignore_Server_Ids: Master_Server_Id: 2 Master_UUID: 910223b9-bfbc-11e6-a5cc-f23c91e0377d Master_Info_File: /var/lib/mysql/master.info SQL_Delay: 0 SQL_Remaining_Delay: NULL Slave_SQL_Running_State: Reading event from the relay log Master_Retry_Count: 86400 Master_Bind: Last_IO_Error_Timestamp: Last_SQL_Error_Timestamp: Master_SSL_Crl: Master_SSL_Crlpath: Retrieved_Gtid_Set: Executed_Gtid_Set: Auto_Position: 0 Replicate_Rewrite_DB: Channel_Name: Master_TLS_Version: 1 row in set (0.00 sec) 在執行一段時間後，可以看到 Seconds_Behind_Master 的延遲秒數變成 0 了，表示同步資料已經完成\nmysql\u0026gt; show slave status\\G ERROR 2006 (HY000): MySQL server has gone away No connection. Trying to reconnect... Connection id: 2589010 Current database: *** NONE *** *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 192.168.1.2 Master_User: rep Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.155171 Read_Master_Log_Pos: 97568199 Relay_Log_File: master-relay-bin.000006 Relay_Log_Pos: 97568404 Relay_Master_Log_File: mysql-bin.155171 Slave_IO_Running: Yes Slave_SQL_Running: Yes Replicate_Do_DB: Replicate_Ignore_DB: mysql Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: mysql.% Last_Errno: 0 Last_Error: Skip_Counter: 0 Exec_Master_Log_Pos: 97568199 Relay_Log_Space: 97568647 Until_Condition: None Until_Log_File: Until_Log_Pos: 0 Master_SSL_Allowed: No Master_SSL_CA_File: Master_SSL_CA_Path: Master_SSL_Cert: Master_SSL_Cipher: Master_SSL_Key: Seconds_Behind_Master: 0 Master_SSL_Verify_Server_Cert: No Last_IO_Errno: 0 Last_IO_Error: Last_SQL_Errno: 0 Last_SQL_Error: Replicate_Ignore_Server_Ids: Master_Server_Id: 2 Master_UUID: 910223b9-bfbc-11e6-a5cc-f23c91e0377d Master_Info_File: /var/lib/mysql/master.info SQL_Delay: 0 SQL_Remaining_Delay: NULL Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates Master_Retry_Count: 86400 Master_Bind: Last_IO_Error_Timestamp: Last_SQL_Error_Timestamp: Master_SSL_Crl: Master_SSL_Crlpath: Retrieved_Gtid_Set: Executed_Gtid_Set: Auto_Position: 0 Replicate_Rewrite_DB: Channel_Name: Master_TLS_Version: 1 row in set (0.00 sec) 參考資料  解决Mysql复制Relay log read failure 的问题_雨中行走的技术博客_51CTO博客 Troubleshooting Relay Log Corruption in MySQL - Percona Database Performance Blog 解决Mysql replication error 1594 - Relay log read failure - Could not parse relay log event entry_叫我酋长好吧-CSDN博客 Mysql replication error 1594 - Relay log read failure - Could not parse relay log event entry  ","date":"2021-08-05T08:50:29+08:00","permalink":"https://dev.kejyun.com/article/2021/08/mysql-replica-master-binary-log-is-corrupted/","title":"MySQL Replica master's binary log is corrupted"}]